// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <LoginOnGoogle
          clientNotReady={[Function]}
          clientReady={[Function]}
        />,
        <header
          className="App-header"
        />,
        <div
          className="page-selector__list"
        >
          <StateManager
            defaultInputValue=""
            defaultMenuIsOpen={false}
            defaultValue={null}
            isMulti={true}
            isSearchable={true}
            onChange={[Function]}
          />
        </div>,
        <PostCreator
          onSubmit={[Function]}
          textChanged={[Function]}
          uploadImage={[Function]}
        />,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "clientNotReady": [Function],
          "clientReady": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "App-header",
        },
        "ref": null,
        "rendered": null,
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <StateManager
            defaultInputValue=""
            defaultMenuIsOpen={false}
            defaultValue={null}
            isMulti={true}
            isSearchable={true}
            onChange={[Function]}
          />,
          "className": "page-selector__list",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "defaultInputValue": "",
            "defaultMenuIsOpen": false,
            "defaultValue": null,
            "isMulti": true,
            "isSearchable": true,
            "onChange": [Function],
            "options": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "onSubmit": [Function],
          "textChanged": [Function],
          "uploadImage": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <LoginOnGoogle
            clientNotReady={[Function]}
            clientReady={[Function]}
          />,
          <header
            className="App-header"
          />,
          <div
            className="page-selector__list"
          >
            <StateManager
              defaultInputValue=""
              defaultMenuIsOpen={false}
              defaultValue={null}
              isMulti={true}
              isSearchable={true}
              onChange={[Function]}
            />
          </div>,
          <PostCreator
            onSubmit={[Function]}
            textChanged={[Function]}
            uploadImage={[Function]}
          />,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "clientNotReady": [Function],
            "clientReady": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "App-header",
          },
          "ref": null,
          "rendered": null,
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <StateManager
              defaultInputValue=""
              defaultMenuIsOpen={false}
              defaultValue={null}
              isMulti={true}
              isSearchable={true}
              onChange={[Function]}
            />,
            "className": "page-selector__list",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultInputValue": "",
              "defaultMenuIsOpen": false,
              "defaultValue": null,
              "isMulti": true,
              "isSearchable": true,
              "onChange": [Function],
              "options": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "onSubmit": [Function],
            "textChanged": [Function],
            "uploadImage": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
